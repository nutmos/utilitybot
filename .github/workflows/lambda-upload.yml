name: Lambda

on:
  push:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Display Go version
        run: go version
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -tags lambda.norpc -o bootstrap main.go
        env:
          GOOS: linux
          GOARCH: arm64
      - name: Add secret folder
        run: mkdir secrets
      - name: Add secret file
        run: |
          echo "
          apiKey:
            aviationstack: placeholder
            telegram: placeholder
          deploymentMode: Lambda
          " > secrets/secrets.yaml
      - name: Zip File
        run: zip -r function.zip bootstrap secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: MyLambdaSessionName
      - name: Upload to Lambda
        run: |
          aws lambda update-function-code --function-name ${AWS_LAMBDA_ARN} --zip-file fileb://./function.zip
        env:
          AWS_LAMBDA_ARN: ${{ secrets.AWS_LAMBDA_ARN }}
